/* ----------------------------------------------------
LAYOUT
This module introduces overrides for the template area
positioning styles to offer a better experience on
browsers that support it.
---------------------------------------------------- */

/* Fixes a bug where outlines would be cutoff in modules */
#{$specify} .moduletable {
  overflow: visible !important;
}
/* ------------------------
START GRID
------------------------ */

@supports (display: grid) {
  /* reset sizing and positional properties
  of main areas to prevent odd layout issues
  when using grid. These resets requre grid to
  be supported, so it will fallback to the old
  positioning CSS */
  #{$specify} #maincolumn-r,
  #{$specify} #maincolumn-l,
  #{$specify} #maincolumn-l-r,
  #{$specify} #maincolumn-wide,
  #{$specify} #system-message-container,
  #{$specify} #leftcolumn,
  #{$specify} #downright,
  #{$specify} #epilogue,
  #{$specify} .left-position {
    width: auto !important;
    max-width: 100% !important;
    padding: 0 !important;
    margin: 0 !important;
    box-sizing: border-box !important;
  }
  /* fixes a bug where elements that overflow the whitebox
  could overflow the body and allow the page to be scrolled
  on the x axis */
  #{$specify} #wrapper {
    overflow-x: hidden;
  }
  /* Setup basic grid areas and layout
  allow elements to overflow the grid to
  cover the full width of the screen */
  #{$specify} #whitebox {
    display: grid;
    overflow: visible;
    grid-template-columns: 1fr;
    grid-template-areas:
      'sys'
      'left'
      'main'
      'right'
      'epi';
  }
  #{$specify} #system-message-container {
    grid-area: sys;
  }
  #{$specify} #sidebar_trigger {
    grid-area: left;
  }
  #{$specify} #leftcolumn {
    grid-area: left;
  }
  #{$specify} #maincolumn-l-r,
  #{$specify} #maincolumn-l,
  #{$specify} #maincolumn-r,
  #{$specify} #maincolumn-wide, {
    grid-area: main;
  }
  #{$specify} #downright {
    grid-area: right;
  }
  #{$specify} #epilogue {
    grid-area: epi;
  }
  @include breakpoint(md) {
    /* Add left column to tablet size */
    #{$specify} #whitebox {
      grid-template-columns: 200px 1fr;
      grid-template-areas:
        'sys sys'
        'left main'
        'right right'
        'epi epi';
      grid-column-gap: s(2);
    }
    #{$specify} #maincolumn-r,
    #{$specify} #maincolumn-wide {
      grid-area: left / span 2;
    }
  }
  @include breakpoint(lg) {
    /* Add right column and increase the column gap for
    larger screens */
    #{$specify} #whitebox {
      grid-template-columns: 250px 1fr 250px;
      grid-template-areas:
        'sys sys sys'
        'left main right'
        'epi epi epi';
      grid-column-gap: s(3);
    }
    #{$specify} #maincolumn-l {
      grid-area: main / span 2;
    }
    #{$specify} #maincolumn-wide {
      grid-area: left / span 3;
    }
  }
}
/* ------------------------
END GRID - START PADDING
Adds space around content so
that content doesn't hit edge
of screen
------------------------ */
$mobile-padding: s(1);
@supports (display: grid) {
  #{$specify} #whitebox {
    padding: $mobile-padding;
    width: auto !important;
    display: border-box !important;
    max-width: $max-width !important;
  }
}
/* ------------------------
END PADDING - START MARGINS
Adds space above and below
the main content area
------------------------ */
$content-margin: $section-margin !default;
$half-content-margin: $content-margin / 2;

#{$specify} #whitebox {
  margin: $content-margin auto;
}
/* ------------------------
END MARGINS - START SIDEBAR
Adjusts the position and layout
of the responsive navigation menu
and it's trigger
------------------------ */
$touch-target: 38px;

@media only screen and (max-width: 700px) {
  /* only applying these edits when grid is supported,
  it relies on changes made above */
  @supports (display: grid) {
    /* Set the max width of the sidebar, add padding equal to size of
    the touch target, position it in the gap between the banner and content */
    #{$specify} #leftcolumn {
      max-width: 300px !important;
      padding: $touch-target !important;
      margin-top: calc(((#{$content-margin} / 2) + #{$touch-target}) * -1) !important;
    }
    /* align touch target with sidebar, remove border added by link styles */
    #{$specify} #sidebar_trigger {
      margin-top: calc(((#{$content-margin} / 2) + #{$touch-target}) * -1) !important;
      border: none !important;
    }
    /* Fix a bug where the icon was not centered in the box */
    #{$specify} #sidebar_trigger::before {
      height: auto;
    }

    /* Remove styling of default touch target,
    align it to the right side of the sidebar */
    #{$specify} #sidebar_trigger.active {
      border: none !important;
      width: $touch-target !important;
      height: $touch-target !important;
      background: white !important;
      margin-left: 300px - $touch-target !important;
    }
    /* Add new touch target using an icon instead of an image
    align it to the center of the touch target */
    #{$specify} #sidebar_trigger.active::after {
      content: '\49';
      font-family: $font-icon;
      display: block !important;
      font-size: 18px;
      line-height: $touch-target;
      text-align: center;
      color: c($c-grey, 800);
    }
  }
}

@supports (display: grid) {
  /* remove unneeded padding from module tables */
  #{$specify} #leftcolumn .moduletable {
    padding: 0;
  }
}
/* ------------------------
END SIDEBAR - START BANNER
Adjusts the content of the
banner position to ensure content
lines up and doesn't hit the edge
of the screen.
------------------------ */

/* Ensure content inside the banner stays
within the width of the main column,
add same padding as is on whitebox */
#{$specify} #banner .moduletable {
  max-width: $max-width;
  margin: auto;
  padding: $mobile-padding;
}

/* ------------------------
END BANNER - START WHITEBAR
Adds space to the site name area
------------------------ */
#{$specify} #whitebar {
  margin-top: s(1);
  margin-bottom: s(1);
}
