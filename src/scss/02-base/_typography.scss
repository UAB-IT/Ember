/* ==========================================================================
   SECTION TYPOGRAPHY
========================================================================== */

/** SECTION Resets
 * These styles override aggressive styles from central style.css
-------------------------------------------------------------------------- */
@if $adjust-central-typography == true {
  :root {
    font-size: #{$rem-size + 'px'};
    color: $c-body;
  }
  /* Restore inheritance to inline elements */
  #{$specify} h1 a,
  #{$specify} h1 strong,
  #{$specify} h1 b,
  #{$specify} h1 span,
  #{$specify} h2 a,
  #{$specify} h2 strong,
  #{$specify} h2 b,
  #{$specify} h2 span,
  #{$specify} h3 a,
  #{$specify} h3 strong,
  #{$specify} h3 b,
  #{$specify} h3 span,
  #{$specify} h4 a,
  #{$specify} h4 strong,
  #{$specify} h4 b,
  #{$specify} h4 span,
  #{$specify} #footer a,
  #{$specify} #footer span,
  #{$specify} b,
  #{$specify} span,
  #{$specify} strong,
  #{$specify} em {
    @include reset(color, font-size);
    font-family: inherit !important;
  }

  /* Restore font weight inheritance to certain inline elements */
  #{$specify} .categories-list h3 a,
  #{$specify} span,
  #{$specify} #rightsidebar h4 .mod-articles-category-title {
    font-weight: inherit !important;
  }

  /* Correct header font on h5 elements */
  #{$specify} h5 {
    font-family: $font-head !important;
  }

  /* remove spacing and border from the generated header from the article title */
  #{$specify} .page-header {
    @include reset(margin, padding, border);
  }
}

/* End !SECTION Resets */
/** SECTION Header Spacing
 * Create a consistent style for headers and their spacing
-------------------------------------------------------------------------- */

#{$specify} h1,
#{$specify} .uk-h1,
#{$specify} h2,
#{$specify} .uk-h2,
#{$specify} h3,
#{$specify} .uk-h3,
#{$specify} h4,
#{$specify} .uk-h4,
#{$specify} h5,
#{$specify} .uk-h5,
#{$specify} h6,
#{$specify} .uk-h6 {
  @include reset(margin, color);
  text-align: inherit;
  margin: 0 0 s(1);
  font-family: $font-head;
  color: $c-header;
}

/* Gives added top margin to headers when they follow content */
//OPTIMIZE: specificity
#{$specify} [role='main'] * + {
  h1,
  h2,
  h3,
  h4 {
    margin-top: s(2);
  }
}
#{$specify} [role='main'] {
  h4,
  h5,
  h6 {
    margin-bottom: s(0.5);
  }
}

/* TEMP: Test margins for lower level headers + text
#{$specify} h4 + p {
  margin-top: s(-1);
}
#{$specify} h5 + p {
  margin-top: s(-1);
}
*/

#{$specify} h5,
#{$specify} h6 {
  @include weight(bold, head);
}

/* TEMP: Remove additional margin between headers in the content area
#{$specify} [role='main'] h1 + h2,
#{$specify} [role='main'] h2 + h3,
#{$specify} [role='main'] h3 + h4,
#{$specify} [role='main'] h4 + h5,
#{$specify} [role='main'] h5 + h6 {
  margin-top: 0;
}
*/

/* End !SECTION Header Spacing */
/** SECTION Font Sizes
 * Use modular scale for font sizes and line heights
 * [1] ID is used here to overwrite equally high specificity from style.css
-------------------------------------------------------------------------- */
#{$specify} h1,
#{$specify} .uk-h1 { @include type-setting(h1); }
#{$specify} h2,
#{$specify} .uk-h2 { @include type-setting(h2); }
/*[1]*/
#{$specify} h3,
#leftcolumn h3,
#{$specify} .uk-h3 { @include type-setting(h3); }
#{$specify} h4,
#{$specify} .uk-h4 { @include type-setting(h4); }
#{$specify} h5,
#{$specify} .uk-h5 { @include type-setting(h5); }
#{$specify} h6,
#{$specify} .uk-h6 { @include type-setting(h6); }
body,
#{$specify} p,
#{$specify} .uk-p { @include type-setting(p); }
#{$specify} small,
#{$specify} .uk-small { @include type-setting(sm); }

/* End !SECTION Font Sizes */
/** SECTION Copy
 * Styles for block level typographical elements
-------------------------------------------------------------------------- */

#{$specify} p,
#{$specify} hr,
#{$specify} pre {
  margin-top: 0;
  @include block-margin;
}
#{$specify} p + p {
  margin-top: s(-0.5);
}

#{$specify} pre {
  white-space: pre-wrap;
}

#{$specify} pre > code {
  display: block;
  padding: $block-padding;
  white-space: inherit;
}

/* End !SECTION Copy */
/** SECTION Rule Lines
 * Style for the <hr> element
 * [1] Ensure hr takes up no vertical space, but is still visible
 * [2] Allow rule lines that immediately follow headers to sit on the
 * header's baseline
-------------------------------------------------------------------------- */

#{$specify} hr {
  box-sizing: content-box; /*[1]*/
  height: 0; /*[1]*/
  overflow: visible; /*[1]*/
  border-style: solid;
  border-width: 0 0 $hr-width;
  border-color: $hr-color;
}

#{$specify} h1 + hr,
#{$specify} h2 + hr,
#{$specify} h3 + hr,
#{$specify} h4 + hr,
#{$specify} h5 + hr,
#{$specify} h6 + hr {
  margin-top: s(-0.5); /*[2]*/
}

/* End !SECTION Rule Lines */
/** SECTION Links
-------------------------------------------------------------------------- */

/* Remove existing link styles */
#{$specify} a {
  @include reset(color, font-weight, transition);
  text-decoration: none;
}

/**
 * Applies link styles to content areas only. Less specific than an id and
 * helps avoid overreaching styles.
**/
#{$specify} [role='banner'],
#{$specify} [role='main'],
#{$specify} [id='footer'],
#{$specify} [id='lockedFooter'] {
  a[href]:not(.unstyled) {
    @include link-style;
    &:hover {
      @include link-style($hover: true);
    }
  }

  // Error handling. If no icon is found, don't print this CSS
  @if $icon-pdf != null and $icon-new-tab != null {
    /**
     * [1] Add basic styles for the icon added to links that open in new
     * tabs or lead to a pdf document.
     * [2] Add new tab icon
     * [3] Add pdf icon
    **/
    /*[1]*/
    a:not(.btn)[target='_blank']::after,
    a:not(.btn)[href$='.pdf']::after {
      font-family: $font-icon;
      margin-left: 0.5em;
      font-weight: normal;
      font-size: 75%;
    }

    a:not(.btn)[target='_blank']::after { content: '#{$icon-new-tab}'; /*[2]*/ }
    a:not(.btn)[href$='.pdf']::after { content: '#{$icon-pdf}'; /*[3]*/ }
  }
}

/* End !SECTION Links */
/** SECTION SEMANTIC HTML
-------------------------------------------------------------------------- */

#{$specify} abbr {
  text-decoration: none;
}

/* Add padding to inline elements with background */
#{$specify} mark,
#{$specify} code,
#{$specify} kbd {
  padding: $inline-padding;
}
#{$specify} code,
#{$specify} kbd {
  white-space: pre;
  border-radius: $bdr-radius;
  font-family: $font-mono;
}

#{$specify} mark {
  background-color: c($c-accent, 100);
}

#{$specify} code {
  background-color: $c-background;
  color: c( $c-grey, 700 );
}
#{$specify} kbd {
  background-color: c( $c-grey, 800 );
  color: c( $c-grey, 050 );
}

/* End !SECTION SEMANTIC HTML */
/* End !SECTION TYPOGRAPHY */
