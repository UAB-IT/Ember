(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{213:function(t,e,a){"use strict";a.r(e);var s=a(0),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"color"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#color"}},[t._v("#")]),t._v(" Color")]),t._v(" "),a("h2",{attrs:{id:"functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),a("h3",{attrs:{id:"color-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#color-index"}},[t._v("#")]),t._v(" color-index")]),t._v(" "),a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("color-index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("Argument")]),t._v(" "),a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("$number")])]),t._v(" "),a("td",[t._v("number(unitless)")]),t._v(" "),a("td",[t._v("Must be a positive integer < 1000 & divisible by 50")])])])]),t._v(" "),a("p",[t._v("This function converts an input number to a percentage. This is useful if you need to calculate colors based on a model similar to that used in the colors of Google's Material Design, where each color variant is reffered to by an increment of 100.")]),t._v(" "),a("p",[t._v("For the purposes of "),a("code",[t._v("color-index()")]),t._v(", a level of 500 equals 0%. Every increment of 50 less than 500 shifts the output percentage by +10%. Every 50 increment greater than 500 shifts the output by -10%.")]),t._v(" "),a("p",[t._v("The idea is that 500 is the base color, 100 is an extremely light variant of the base color, and 900 is extremely dark.")]),t._v(" "),a("p",[t._v("Returns a number(%) using this formula: "),a("code",[t._v("(($number - 500) / -5) + 0%")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"color-mix"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#color-mix"}},[t._v("#")]),t._v(" color-mix")]),t._v(" "),a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("color-mix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$percent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("Arg")]),t._v(" "),a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("$color")])]),t._v(" "),a("td",[t._v("color")]),t._v(" "),a("td",[t._v("The color to be adjusted")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$percent")])]),t._v(" "),a("td",[t._v("number(%)")]),t._v(" "),a("td",[t._v("Contolls how much white or black is mixed with the color. A negative percentage will mix black, positive will mix white.")])])])]),t._v(" "),a("p",[t._v("Allows a color to be made darker or lighter by mixing the color with white or black using the Sass "),a("code",[t._v("color.mix")]),t._v(" function.")]),t._v(" "),a("h3",{attrs:{id:"color-alpha"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#color-alpha"}},[t._v("#")]),t._v(" color-alpha")]),t._v(" "),a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("color-alpha")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$opacity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("Arg")]),t._v(" "),a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("$color")])]),t._v(" "),a("td",[t._v("color")]),t._v(" "),a("td",[t._v("The color to be adjusted")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$opacity")])]),t._v(" "),a("td",[t._v("number")]),t._v(" "),a("td",[t._v("Can be a unitless number 0-1 inclusive, or a percentage between 0 and 100")])])])]),t._v(" "),a("p",[t._v("Changes the input color to the desired opacity. Returns a color in rgba format.")]),t._v(" "),a("h3",{attrs:{id:"color-scale"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#color-scale"}},[t._v("#")]),t._v(" color-scale")]),t._v(" "),a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("color-scale")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$percent")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$opacity")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$mix")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$config-use-mix-method")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("Arg")]),t._v(" "),a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("$color")])]),t._v(" "),a("td",[t._v("color")]),t._v(" "),a("td",[t._v("The color to be adjusted")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$percent")])]),t._v(" "),a("td",[t._v("number(%)")]),t._v(" "),a("td",[t._v("Contolls how much lighter or darker to make the color. A negative percentage will make the color darker, a positive percentage will make the color lighter.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$opacity")])]),t._v(" "),a("td",[t._v("number")]),t._v(" "),a("td",[t._v("Can be a unitless number 0-1 inclusive, or a percentage between 0 and 100")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$mix")])]),t._v(" "),a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("determines whether to use "),a("code",[t._v("color.mix")]),t._v(" or "),a("code",[t._v("color.scale")]),t._v(" to modify the color's lightness")])])])]),t._v(" "),a("p",[t._v("This function can be used to change the lightness of a color and it's opacity at the same time.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("You can also choose to use the sass "),a("code",[t._v("color.scale")]),t._v(" method of lightening or darkening the color if the output using the "),a("code",[t._v("color.mix")]),t._v(" method washed out or muddy. This can be done once using "),a("code",[t._v("$mix: false")]),t._v(" when calling the function. It can also be set globally in the configuration.")])])])}),[],!1,null,null,null);e.default=o.exports}}]);