// ==========================================================================
// SECTION DESIGN TOKENS
// Design tokens are atomic items that record the semantic role of any value
// Tokens also record high level design decisions and branding
// ==========================================================================

@use '@mattmcadams/stratus';
@use 'sass:map';
@use 'sass:meta';

@function get($token, $keys...) {
  @return stratus.get($token, $keys...);
}

$_default-key: 'base';

// SECTION Typography
// ==========================================================================

$font: (
  'body': (
    'base': '"proxima-nova", arial, helvetica, sans-serif !important',
    'weight': (
      'thin': 100,
      'normal': 400,
      'bold': 600,
      'black': 700
    )
  ),
  'head': (
    'base': '"kulturista-web", serif',
    'weight': (
      'thin': 300,
      'normal': 400,
      'bold': 600,
      'black': bold
    )
  ),
  'mono': (
    'base': monospace,
    'weight': (
      'normal': normal,
      'bold': bold
    )
  ),
  'icon': (
    'base': 'IcoMoon',
    'weight': (
      'normal': normal,
      'bold': bold
    )
  )
);

@function font($name, $weight: null){
  @if $weight {
    @return stratus.get($font, $name, $weight);
  }
  @return stratus.get($font, $name, $_default-key);
}

@mixin font($name, $weight: null) {
  $_family: font($name);
  $_weight: font($name, $weight);
  font-family: $_family;
  @if $_weight { font-weight: $_weight; }
}

// END !SECTION Typography
// SECTION Color
// ==========================================================================

@function _color-step($color, $step) {
  @return stratus.color-scale($color, stratus.color-index($step));
}

$_brand-color: (
  'uabgreen': #1E6B52,
  'darkgreen': #295135,
  'blaze': #FFD400,
  'apple': #80BC00,
  'gold': #AA9767,
  'stone': #808285
);
@function _brand($color) {
  @return map.get($_brand-color, $color);
}

$color: (
  'primary': (
    'base': _brand('uabgreen'),
    '100': _color-step(_brand('uabgreen'), 100),
    '200': _color-step(_brand('uabgreen'), 200),
    '300': _color-step(_brand('uabgreen'), 300),
    '400': _color-step(_brand('uabgreen'), 400),
    '500': _color-step(_brand('uabgreen'), 500),
    '600': _color-step(_brand('uabgreen'), 600),
    '700': _color-step(_brand('uabgreen'), 700),
    '800': _color-step(_brand('uabgreen'), 800),
    '900': _color-step(_brand('uabgreen'), 900),
  ),
  'accent': (
    'base': _brand('apple'),
    '100': _color-step(_brand('apple'), 100),
    '200': _color-step(_brand('apple'), 200),
    '300': _color-step(_brand('apple'), 300),
    '400': _color-step(_brand('apple'), 400),
    '500': _color-step(_brand('apple'), 500),
    '600': _color-step(_brand('apple'), 600),
    '700': _color-step(_brand('apple'), 700),
    '800': _color-step(_brand('apple'), 800),
    '900': _color-step(_brand('apple'), 900),
  ),
  'secondary': (
    'base': _brand('darkgreen'),
    '100': _color-step(_brand('darkgreen'), 100),
    '200': _color-step(_brand('darkgreen'), 200),
    '300': _color-step(_brand('darkgreen'), 300),
    '400': _color-step(_brand('darkgreen'), 400),
    '500': _color-step(_brand('darkgreen'), 500),
    '600': _color-step(_brand('darkgreen'), 600),
    '700': _color-step(_brand('darkgreen'), 700),
    '800': _color-step(_brand('darkgreen'), 800),
    '900': _color-step(_brand('darkgreen'), 900),
  ),
  'neutral': (
    'base': _brand('stone'),
    '100': _color-step(_brand('stone'), 100),
    '200': _color-step(_brand('stone'), 200),
    '300': _color-step(_brand('stone'), 300),
    '400': _color-step(_brand('stone'), 400),
    '500': _color-step(_brand('stone'), 500),
    '600': _color-step(_brand('stone'), 600),
    '700': _color-step(_brand('stone'), 700),
    '800': _color-step(_brand('stone'), 800),
    '900': _color-step(_brand('stone'), 900),
  ),
  'state': (
    'info': _brand('uabgreen'),
    'notice': _brand('blase'),
    'positive': _brand('apple'),
    'negative': (
      'base': #F00,
      '100': _color-step(#F00, 100),
      '200': _color-step(#F00, 200),
      '300': _color-step(#F00, 300),
      '400': _color-step(#F00, 400),
      '500': _color-step(#F00, 500),
      '600': _color-step(#F00, 600),
      '700': _color-step(#F00, 700),
      '800': _color-step(#F00, 800),
      '900': _color-step(#F00, 900),
    )
  ),
  'background': (
    'base': stratus.color-scale(_brand('stone'), $opacity: 0.15),
    'negative': stratus.color-scale(#F00, $opacity: 0.15),
  ),
  'text': (
    'body': black,
    'header': black,
  )
);

@function color($keys...) {
  $_output: stratus.get($color, $keys...);
  @if meta.type-of($_output) == map {
    @return map.get($_output, $_default-key); }
  @return $_output;
}

// END !SECTION Color
// SECTION Icons
// ==========================================================================

$icons: (
  'new-tab': '\e024',
  'pdf': '\e239'
);
@function icon($name) {
  @return map.get($icons, $name);
}

// END !SECTION Icons
// SECTION Border
// ==========================================================================

$border: (
  'width': (
    'hairline': 1px,
    'medium': 2px,
    'large': 5px
  ),
  'radius': (
    'base': 2px,
    'large': 4px,
    'round': 50%,
    'square': 0
  ),
  'color': (
    'divider': black,
    'accent': stratus.get($color, 'neutral', '200')
  )
);

@function border($keys...) {
  $_return: stratus.get($border, $keys...);
  @if meta.type-of($_return) == map { @return map.get($_return, $_default-key); }
  @return $_return;
}

// END !SECTION Border
// SECTION Spacing
// ==========================================================================

$spacing: (
  'padding': (
    'body': stratus.sp(1),
    'inline': 0 0.2em 0.1em,
    'input': 0.3em 1em,
    'block': stratus.sp(1),
    'section': (
      'base': stratus.sp(4),
      'small': stratus.sp(2)
    )
  ),
  'margin': (
    'block': stratus.sp(1),
    'section': stratus.sp(4)
  ),
  'text': (
    'indent': 1em
  ),
  'gap': (
    'base': stratus.sp(1),
    'small': stratus.sp(0.5),
    'medium': stratus.sp(1),
    'large': stratus.sp(2)
  ),
);

@function space($key: 1, $path...){
  @if meta.type-of($key) == number {
    @return stratus.sp($key);
  }
  @return stratus.get(map.get($spacing, $key), $path...);
}

// END !SECTION Border
// SECTION Spacing
// ==========================================================================

$z-index: (
  'background': -100,
  'main-content': 0,
  'modal': 100,
  'navigation': 200
);

@function z-index($key) {
  @return map.get($z-index, $key);
}
