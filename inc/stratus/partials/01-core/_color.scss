// --------------------------------------------------------------
// Color
// --------------------------------------------------------------

/// Tint color
/// @group utility
/// @param {color} $color - color to be tinted
/// @param {number(%)} $percentage - key to extract value of
/// @return `$color` mixed with white by `$percentage`
@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}
/// Shade color
/// @group utility
/// @param {color} $color - color to be shaded
/// @param {number(%)} $percentage - key to extract value of
/// @return `$color` mixed with black by `$percentage`
@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}

/// configuration of color scale
/// @group color
/// 500 is the base color, higher numbers are mixed with black, lower numbers are mixed with white
$color-scale: (
  050: 90%,
  100: 80%,
  200: 60%,
  300: 40%,
  400: 20%,
  500: 0%,
  600: 20%,
  700: 40%,
  800: 60%,
  900: 80%
) !default;

/// Generates tint or shade of color input
/// @group utility
/// @requires map-get()
/// @requires shade()
/// @requires tint()
/// @requires $color-scale
/// @param {color} $color [black] - color to be manipulated
/// @param {$color-scale.key} $level - level of the color
/// @see $color-scale
/// @return manipulated color
@function c($color: black, $level: null) {
  @if $level >= 600 {
    $scale: map-get( $color-scale, $level );
    @return shade( $color, $scale );
  }
  @else if $level <= 400 {
    $scale: map-get( $color-scale, $level );
    @return tint( $color, $scale );
  }
  @else {
    @return $color;
  }
}

// ----------------------------------------------------
// COLORS
// ----------------------------------------------------

/// Sets the primary brand color
/// @group color
$c-primary: $c-light-blue !default;
/// Sets the accent brand color
/// @group color
$c-accent: $c-teal !default;
/// Color used for success information
/// @group color
$c-green: green !default;
/// Color used for caution information
/// @group color
$c-yellow: yellow !default;
/// Color used for warning information
/// @group color
$c-red: red !default;

/// Color used for backgrounds
/// @group color
$c-background: $c-light-grey !default;